When would you want to use a remote repository rather than keeping all your work
local?

    Using a remote repository allows you and others to access your files and collaborate on work. You can collaborate and share files through the remote repository and ensure that you are using shared up-to-date files.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Manually pulling changes allows you to sync changes and commits at the appropriate times, when files are at a stage that is ready to be shared. If you are collaborating, or changes are in progress on the remote repository, then you may not want to sync those commits yet. Also, if you're working on files locally, pulling changes from the remote repository may impact your local work in progress.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are GitHub clones of repositories. You would use forks when sharing repositories with other people so that they can make changes that won't impact your repository.
	Clones are copies of repositories that exist on your local machine. These can be either of GitHub repositories that you will work on on your local machine or of repositories on your local machine.
	Branches are like subsections of a single file that you split off in order to work on different aspects of your file while still maintaining a working file.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a last known state of the remote stored locally allows you to make changes, compare files, and update local files. It also allows you to do all of this offline or without access to the remote files.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Without Git or GitHub, I'd probably collaborate using something like GoogleDrive or Dropbox, where files are able to be shared and updated. You can keep copies locally, or make them accessible offline. If you're collaborating and working offline, you need to manually check for differences before uploading a file that was changed locally. On GoogleDrive, versions can be updated simultaneously if the various collaborators are all online, and version histories are shared. Version histories are trackable, if they autosaved or you forced a save, and changes are color coded by collaborator to track who made changes. If you make changes independently offline, though, the only way to merge documents would be a full side by side comparison, otherwise one document will overwrite the other. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
