What happens when you initialize a repository? Why do you need to do it?
	
	Initializing a repository creates a new git repository. You need to initialize a repository in order to create the entity which stores your git commits for any given project.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a space to set aside files that you are grouping together for a commit. It allows you to set aside files as you're organizing your work and preparing to commit before actually performing a commit. It offers organizational value to the workspace while you're working.

How can you use the staging area to make sure you have one commit per logical
change?

	By comparing the changes that have been done between the staging area and the last commit, you can ensure that you are saving only one logical change per commit.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	Branches can be helpful when you're creating simultaneous versions of files that you want to keep track of. Branches help by tracking changes along a certain path while still keeping other working versions with other variances.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?